workspace:
  base: /workdir
  path: rchain-perf-harness

services:
  push-metrics:
    image: cfmanteiga/alpine-bash-curl-jq
    detach: true
    commands:
      - cd metrics
      - sleep 15
      - /bin/bash loop-metrics.sh

clone:
  clone-rchain-perf-harness:
    image: plugins/git
  clone-rchain:
    image: plugins/git
    commands:
      - git clone https://github.com/dzajkowski/rchain.git /workdir/rchain && cd /workdir/rchain
      - git fetch
      - git checkout dev

pipeline:
#  debug:
#    image: alpine
#    commands:
#      - ls /workdir

  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - /workdir/.ivy2
    volumes:
      - /tmp/cache:/cache

  setup-when-custom-commit:
    image: lukaszgolebiewski/rchain-builder
    pull: true
    commands:
      - echo $CONTRACT
      - echo $RCHAIN_COMMIT_HASH
      - cd /workdir/rchain
      - git checkout $RCHAIN_COMMIT_HASH
      - sbt -Dsbt.ivy.home=/workdir/.ivy2 ";rholang/bnfc:generate; compile; node/docker:publishLocal"
      - docker image tag coop.rchain/rnode:latest rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: deployment
      environment: custom_commit

  setup:
    image: docker
    commands:
      - echo $CONTRACT
      - echo $RNODE_IMAGE_VERSION
      - docker pull rchain/rnode:dev
      - docker image tag rchain/rnode:dev rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: push

  setup-when-custom-contract:
    image: docker
    commands:
      - echo $CONTRACT
      - echo $RNODE_IMAGE_VERSION
      - docker pull rchain/rnode:$RNODE_IMAGE_VERSION
      - docker image tag rchain/rnode:$RNODE_IMAGE_VERSION rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: deployment
      environment: custom_contract

  bootstrap:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    detach: true
    environment:
      - JAVA_OPTS=-Dkamon.metric.tick-interval=500ms
    commands:
      - /opt/docker/bin/rnode -c ./drone/config/bootstrap.toml run

  validator1:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    detach: true
    environment:
      - JAVA_OPTS=-Dkamon.metric.tick-interval=500ms
    commands:
      - sleep 10
      - /opt/docker/bin/rnode -c ./drone/config/validator1.toml run

  validator2:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    detach: true
    environment:
      - JAVA_OPTS=-Dkamon.metric.tick-interval=500ms
    commands:
      - sleep 10
      - /opt/docker/bin/rnode -c ./drone/config/validator2.toml run

  validator3:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    detach: true
    environment:
      - JAVA_OPTS=-Dkamon.metric.tick-interval=500ms
    commands:
      - sleep 10
      - /opt/docker/bin/rnode -c ./drone/config/validator3.toml run

  validator4:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    detach: true
    environment:
      - JAVA_OPTS=-Dkamon.metric.tick-interval=500ms
    commands:
      - sleep 10
      - /opt/docker/bin/rnode -c ./drone/config/validator4.toml run

  deploy:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    commands:
      - sleep 40
      - /opt/docker/bin/rnode --grpc-host validator1 --grpc-port 30015 deploy --from "0x1" --phlo-limit 0 --phlo-price 0 --nonce 0 drone/config/contracts/tut-philosophers.rho

  propose:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    commands:
      - /opt/docker/bin/rnode --grpc-host validator1 --grpc-port 30015 propose

  gatling:
    image: lukaszgolebiewski/rchain-builder
    environment:
      - RCHAIN_REPO_HASH=${RNODE_IMAGE_VERSION}
    commands:
      - pwd
      - cd templater
      - mkfifo pipe
      - tee sbt.out < pipe &
      - sbt -Dsbt.ivy.home=/workdir/.ivy2 -Drnodes.0=bootstrap:30015 -Drnodes.1=validator1:30015 -Drnodes.2=validator2:30015 -Drnodes.3=validator3:30015 -Drnodes.4=validator4:30015 runner/gatling:test > pipe
      - sleep 200
      - echo "stop" > ../metrics/stop-loop
      - /bin/bash ../etc/check-build-status.sh
    when:
      event: push

  gatling-custom-contract:
    image: hseeberger/scala-sbt
    environment:
      - RCHAIN_REPO_HASH=${RNODE_IMAGE_VERSION}
    commands:
      - pwd
      - cd templater
      - echo $CONTRACT
      - mkfifo pipe
      - tee sbt.out < pipe &
      - sbt -Dsbt.ivy.home=/workdir/.ivy2 -Dcontract=$CONTRACT -Drnodes.0=bootstrap:30015 -Drnodes.1=validator1:30015 -Drnodes.2=validator2:30015 -Drnodes.3=validator3:30015 -Drnodes.4=validator4:30015 runner/gatling:test > pipe
      - sleep 200
      - echo "stop" > ../metrics/stop-loop
      - /bin/bash ../etc/check-build-status.sh
    when:
      event: deployment
      environment: custom_contract

  gatling-custom-commit:
    image: hseeberger/scala-sbt
    environment:
      - RCHAIN_REPO_HASH=${RCHAIN_COMMIT_HASH}
    commands:
      - pwd
      - cd templater
      - echo $CONTRACT
      - mkfifo pipe
      - tee sbt.out < pipe &
      - sbt -Dsbt.ivy.home=/workdir/.ivy2 -Dcontract=$CONTRACT -Drnodes.0=bootstrap:30015 -Drnodes.1=validator1:30015 -Drnodes.2=validator2:30015 -Drnodes.3=validator3:30015 -Drnodes.4=validator4:30015 runner/gatling:test > pipe
      - sleep 200
      - echo "stop" > ../metrics/stop-loop
      - /bin/bash ../etc/check-build-status.sh
    when:
      event: deployment
      environment: custom_commit

  push-metrics-delete-metrics:
    image: cfmanteiga/alpine-bash-curl-jq
    commands:
      - for instance in bootstrap validator1 validator2 validator3 validator4; do curl -XDELETE http://prometheus-pushgateway:9091/metrics/job/${DRONE_COMMIT_SHA}/instance/$instance; done
    when:
      status: [ success, failure ]

  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - /workdir/.ivy2
    volumes:
      - /tmp/cache:/cache
